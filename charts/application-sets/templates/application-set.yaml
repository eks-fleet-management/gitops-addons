{{- range $addonName, $addonConfig := .Values.addons }}
{{- if $addonConfig.enabled | default false }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: addon-{{ $addonName }}
spec:
  goTemplate: true
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
  {{- if $addonConfig.environments }}
    - merge:
        generators:
  {{- end }}
          - clusters:
              selector:
                matchLabels:
                  argocd.argoproj.io/secret-type: cluster               
                  {{- if $addonConfig.labelSelector }}
                  {{- $addonConfig.labelSelector | toYaml | nindent 18 }}
                  {{- end }}
              {{- if  $addonConfig.selector }}
                {{- toYaml $addonConfig.selector | nindent 16 }}
              {{- end }}
              values:
                addonChart: {{ $addonConfig.chartName | default $addonName | quote }}
                addonChartVersion: {{ $addonConfig.defaultVersion | quote }}
                addonChartRepository: {{ $addonConfig.chartRepository| quote }}
                {{- if $addonConfig.chartNamespace }}
                addonChartRepositoryNamespace: {{ $addonConfig.chartNamespace | quote }}
                chart: {{ printf "%s/%s" $addonConfig.chartNamespace ($addonConfig.chartName | default $addonName) | quote }}
                {{- else }}
                chart: {{ printf $addonConfig.chartName | default $addonName | quote }}
                {{- end }}
          {{- if $addonConfig.environments }}
          {{- range $addonConfig.environments }}
          - clusters:
              selector:
                matchLabels:
                  {{- range $key, $value := .matchLabels}}
                  {{ $key }}: {{ $value | quote }}
                  {{- end }}
              values:
                addonChartVersion: {{ .chartVersion | default $addonConfig.defaultVersion | quote }}
          {{- end }}
          {{- end }}
  template:
    metadata:
      name: addon-{{ $addonName }}-{{`{{ .name }}`}}
    spec:
      project: default
      sources:
      - repoURL: '{{`{{ .metadata.annotations.addons_repo_url }}`}}'
        targetRevision: '{{`{{ .metadata.annotations.addons_repo_revision }}`}}'
        ref: values
      {{- if $addonConfig.enableACK | default false }}
      {{ include "application-sets.pod-identity" (dict "addonName" $addonName "addonConfig" $addonConfig "Values" .Values) | nindent 6 }}
      {{- end }}
      - chart:  '{{`{{ .values.chart }}`}}'
        repoURL: '{{`{{ .values.addonChartRepository }}`}}'
        targetRevision: '{{`{{.values.addonChartVersion }}`}}'
        helm:
          releaseName: '{{`{{ .values.addonChart }}`}}'
          ignoreMissingValueFiles: true
          {{- if $addonConfig.valuesObject }}
          valuesObject:
          {{- $addonConfig.valuesObject | toYaml | nindent 12 }}
          {{- end }}
          valueFiles:
              - $values/{{`{{ .metadata.annotations.addons_repo_basepath }}`}}{{`{{ .metadata.labels.tenant }}`}}/default/addons/{{`{{ .values.addonChart }}`}}/values.yaml
              - $values/{{`{{ .metadata.annotations.addons_repo_basepath }}`}}{{`{{ .metadata.labels.tenant }}`}}/clusters/{{`{{ .name }}`}}/addons/{{`{{ .values.addonChart }}`}}/values.yaml
      destination:
        namespace: '{{ $addonConfig.namespace }}'
        name:  '{{`{{ .name }}`}}'
      syncPolicy:
        automated: {}
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
{{- end }}
---
{{- end }}


