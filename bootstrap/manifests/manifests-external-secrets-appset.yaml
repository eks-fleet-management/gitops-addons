apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: fleet-hub-secrets
  namespace: argocd
spec:
  goTemplate: true
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
  - matrix:
      generators:
        - clusters:
            selector:
              matchLabels:
                fleet_member: control-plane
            values:
              addonChart: fleet-secret
        - git:
            repoURL: '{{.metadata.annotations.addons_repo_url}}'
            revision: '{{.metadata.annotations.addons_repo_revision}}'
            files:
              - path: '{{.metadata.annotations.addons_repo_basepath}}control-plane/clusters/{{.name}}/members/*.yaml'
  template:
    metadata:
      name: 'fleet-hub-secrets-{{.clusterName}}'
    spec:
      project: default
      source:
        repoURL: '{{.metadata.annotations.addons_repo_url}}'
        path: '{{.metadata.annotations.addons_repo_basepath}}charts/{{.values.addonChart}}'
        targetRevision: '{{.metadata.annotations.addons_repo_revision}}'
        helm:
          releaseName: '{{.clusterName}}'
          valuesObject:
            secretStore:
              enabled: true
              name: fleet-eks-secret-store
              region: '{{.metadata.annotations.aws_region}}'
              role: '{{ default "" .metadata.annotations.external_secrets_service_crossaccount_role }}'
            externalSecret:
              enabled: true
              server: remote
              secretStoreRefName: fleet-eks-secret-store
              secretStoreRefKind: SecretStore
              clusterName: '{{.clusterName}}'
              secretManagerSecretName: '{{.secretManagerSecretName}}'
              labels:
                tenant: '{{.tenant}}'
                environment: '{{.environment}}'
              annotations:
                secret_manager_secret_name: '{{.secretManagerSecretName}}'
                aws_region: '{{.metadata.annotations.aws_region}}'
                addons_repo_basepath: '{{.addons_repo_basepath}}'
                addons_repo_path: '{{.metadata.annotations.addons_repo_path}}'
                addons_repo_revision: '{{.metadata.annotations.addons_repo_revision}}'
                addons_repo_url:  '{{.metadata.annotations.addons_repo_url}}'
                manifests_repo_basepath: '{{.metadata.annotations.addons_repo_basepath}}'
                manifests_repo_path: '{{.metadata.annotations.addons_repo_path}}'
                manifests_repo_revision: '{{.metadata.annotations.addons_repo_revision}}'
                manifests_repo_url:  '{{.metadata.annotations.addons_repo_url}}'
      destination:
        name: '{{.name}}'
        namespace: "argocd"
      syncPolicy:
        automated:
          allowEmpty: true
        retry:
          backoff:
            duration: 1m
          limit: 100
        syncOptions:
          - CreateNamespace=true
