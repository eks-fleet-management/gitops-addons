apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: manifests-storageclass-resources
  namespace: argocd
spec:
  goTemplate: true
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
    - merge:
        mergeKeys: [server]
        generators:
          - clusters:
              selector:
                matchExpressions:
                  - key: enable_storageclass_resources
                    operator: In
                    values: ['true']
              values:
                addonChart: storageclass-resources
          - clusters:
              selector:
                matchLabels:
                  environment: excluded-workload
  template:
    metadata:
      name: 'storageclass-resources-{{.nameNormalized}}'
    spec:
      project: default
      source:
        repoURL: '{{.metadata.annotations.manifests_repo_url}}'
        path: 'charts/{{.values.addonChart}}'
        targetRevision: '{{.metadata.annotations.manifests_repo_revision}}'
        helm:
          releaseName: '{{.nameNormalized}}'
          ignoreMissingValueFiles: true
          valuesObject:
            storageClasses:
              efs:
                fileSystemId: '{{default "" .metadata.annotations.storageclass_file_system_id}}'
          valueFiles:
            - $values/{{.metadata.annotations.manifests_repo_basepath}}{{.metadata.labels.tenant}}/default/manifests/{{.values.addonChart}}/values.yaml
            - $values/{{.metadata.annotations.manifests_repo_basepath}}{{.metadata.labels.tenant}}/clusters/{{.name}}/manifests/{{.values.addonChart}}/values.yaml
      destination:
        name: '{{.name}}'
        namespace: "argocd"
      syncPolicy:
        automated:
          allowEmpty: true
        retry:
          backoff:
            duration: 1m
          limit: 100
        syncOptions:
          - CreateNamespace=true